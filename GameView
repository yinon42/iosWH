import SwiftUI

struct GameView: View {
    @AppStorage("userName") var userName: String = "Player"

    @State private var playerScore = 0
    @State private var pcScore = 0
    @State private var currentRound = 0

    @State private var playerCardName = "back"
    @State private var pcCardName = "back"

    @State private var playerCardValue = 0
    @State private var pcCardValue = 0

    @State private var gameEnded = false
    @State private var winnerText = ""
    @State private var timerValue = 3

    let cardValues = Array(2...14)
    let maxRounds = 10

    let timer = Timer.publish(every: 3, on: .main, in: .common).autoconnect()

    var body: some View {
        ZStack {
            // רקע דיפולטיבי לפי Light/Dark Mode

            VStack {
                // ניקוד
                HStack {
                    VStack {
                        Text(userName)
                        Text("\(playerScore)")
                            .font(.title)
                            .bold()
                    }
                    Spacer()
                    VStack {
                        Text("PC")
                        Text("\(pcScore)")
                            .font(.title)
                            .bold()
                    }
                }
                .padding(.horizontal, 30)
                .padding(.top)

                Spacer()

                // קלפים עם ריחוף
                HStack {
                    cardView(cardName: playerCardName)
                    Spacer()
                    cardView(cardName: pcCardName)
                }
                .padding(.horizontal, 40)

                Spacer()

                VStack {
                    Image(systemName: "timer")
                    Text("\(timerValue)")
                        .font(.title)
                }

                Spacer()
            }
            .padding()
        }
        .onAppear {
            // הצגת גב בתחילת המשחק
            playerCardName = "back"
            pcCardName = "back"
        }
        .onReceive(timer) { _ in
            guard !gameEnded else { return }

            if currentRound < maxRounds {
                playRound()
            } else {
                endGame()
            }
        }
        .alert(isPresented: $gameEnded) {
            Alert(
                title: Text("Game Over"),
                message: Text(winnerText),
                dismissButton: .default(Text("Back"))
            )
        }
    }

    func cardView(cardName: String) -> some View {
        ZStack {
            RoundedRectangle(cornerRadius: 12)
                .fill(Color(.systemBackground))
                .shadow(radius: 4)

            Image(cardName)
                .resizable()
                .scaledToFit()
                .frame(width: 100, height: 150)
        }
        .frame(width: 120, height: 180)
    }

    func playRound() {
        let playerValue = cardValues.randomElement() ?? 2
        let pcValue = cardValues.randomElement() ?? 2

        playerCardValue = playerValue
        pcCardValue = pcValue

        playerCardName = "card\(playerValue)"
        pcCardName = "card\(pcValue)"

        if playerValue > pcValue {
            playerScore += 1
        } else if pcValue > playerValue {
            pcScore += 1
        }

        currentRound += 1
    }

    func endGame() {
        gameEnded = true

        if playerScore > pcScore {
            winnerText = "\(userName) wins! 🎉"
        } else if pcScore > playerScore {
            winnerText = "PC wins! 🤖"
        } else {
            winnerText = "It's a tie!"
        }
    }
}
